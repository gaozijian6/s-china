struct SolutionMethods {
    static let CHECK_CANDIDATE = "Candidate Checking"
    static let SINGLE_CANDIDATE = "Single Candidate"
    static let HIDDEN_SINGLE_ROW = "Hidden Single(ROW)"
    static let HIDDEN_SINGLE_COLUMN = "Hidden Single(COLUMN)"
    static let HIDDEN_SINGLE_BOX = "Hidden Single(BOX)"
    static let BLOCK_ELIMINATION_ROW = "Block Elimination(ROW)"
    static let BLOCK_ELIMINATION_COLUMN = "Block Elimination(COLUMN)"
    static let BLOCK_ELIMINATION_BOX_ROW = "Block Elimination(BOX-ROW)"
    static let BLOCK_ELIMINATION_BOX_COLUMN = "Block Elimination(BOX-COLUMN)"
    static let NAKED_PAIR_ROW = "Naked Pair(ROW)"
    static let NAKED_PAIR_COLUMN = "Naked Pair(COLUMN)"
    static let NAKED_PAIR_BOX = "Naked Pair(BOX)"
    static let NAKED_TRIPLE_ROW1 = "Naked Triple(ROW1)"
    static let NAKED_TRIPLE_COLUMN1 = "Naked Triple(COLUMN1)"
    static let NAKED_TRIPLE_BOX1 = "Naked Triple(BOX1)"
    static let NAKED_TRIPLE_ROW2 = "Naked Triple(ROW2)"
    static let NAKED_TRIPLE_COLUMN2 = "Naked Triple(COLUMN2)"
    static let NAKED_TRIPLE_BOX2 = "Naked Triple(BOX2)"
    static let HIDDEN_PAIR_ROW = "Hidden Pair(ROW)"
    static let HIDDEN_PAIR_COLUMN = "Hidden Pair(COLUMN)"
    static let HIDDEN_PAIR_BOX = "Hidden Pair(BOX)"
    static let HIDDEN_TRIPLE_ROW = "Hidden Triple(ROW)"
    static let HIDDEN_TRIPLE_COLUMN = "Hidden Triple(COLUMN)"
    static let HIDDEN_TRIPLE_BOX = "Hidden Triple(BOX)"
    static let NAKED_QUADRUPLE_ROW = "Naked Quadruple(ROW)"
    static let NAKED_QUADRUPLE_COLUMN = "Naked Quadruple(COLUMN)"
    static let NAKED_QUADRUPLE_BOX = "Naked Quadruple(BOX)"
    static let X_WING_ROW = "X-Wing(ROW)"
    static let X_WING_COLUMN = "X-Wing(COLUMN)"
    static let X_WING_VARIENT_ROW = "Finned X-Wing(ROW)"
    static let X_WING_VARIENT_COLUMN = "Finned X-Wing(COLUMN)"
    static let XY_WING = "XY-Wing"
    static let XYZ_WING = "XYZ-Wing"
    static let SKYSCRAPER = "Skyscraper"
    static let SKYSCRAPER2 = "Skyscraper2"
    static let COMBINATION_CHAIN = "Chain of Combinations"
    static let SWORDFISH_ROW = "Swordfish(ROW)"
    static let SWORDFISH_COLUMN = "Swordfish(COLUMN)"
    static let SWORDFISH_WITH_FIN_ROW = "Finned Swordfish(ROW)"
    static let SWORDFISH_WITH_FIN_COLUMN = "Finned Swordfish(COLUMN)"
    static let WXYZ_WING = "WXYZ-Wing"
    static let TRIAL_AND_ERROR = "Trial and Error"
    static let LOOP = "Loop"
    static let UNIQUE_RECTANGLE = "Unique Rectangle"
    static let BINARY_UNIVERSAL_GRAVE = "Binary Universal Grave"
    static let DOUBLE_COLOR_CHAIN = "Double Color Chain"
    static let JELLYFISH_ROW = "Jellyfish(ROW)"
    static let JELLYFISH_COLUMN = "Jellyfish(COLUMN)"
    static let TRIPLE_COLOR_CHAIN = "Triple Color Chain"
    static let TWO_STRONG_LINKS = "Two Strong Links"
    static let THREE_STRONG_LINKS = "Three Strong Links"
    static let X_CHAIN = "X-Chain"
    static let TWO_STRING_KITE = "Two String Kite"
}
